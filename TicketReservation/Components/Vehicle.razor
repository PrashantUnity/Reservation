@inject CurrentContextData currentContextData
@inject NavigationManager navigation
<div class="col-sm">
	<div class=" card text-center m-2" style="width: 18rem;">

		<h3 class="card-header text-start">
			Car Type : @availableVehicle.VechileTypes
		</h3>
		<div class="card-body">
			<div class="card-title d-flex justify-content-between">
				<h3>@start</h3>
				<h4 class="badge badge-primary text-black rounded border border-primary justify-content-center align-items-end"> @diff </h4>
				<h3> @end</h3>
			</div>
			<div class="d-flex justify-content-between">
				<h6>@startDate</h6>
				<h6>@endDate</h6>
			</div>
			<div class="card-title d-flex justify-content-between">
				<h5>@searchVechile.LocationFrom</h5>
				<h5>@searchVechile.LocationTo</h5>
			</div>
			<a href="#" class="btn btn-primary" @onclick="BookTicket">Reserve</a>
		</div>
	</div>
</div>

@code {
	#region Parameter
	[Parameter, EditorRequired]
	public AvailableVehicle availableVehicle { get; set; }

	[Parameter, EditorRequired]
	public SearchVehicle searchVechile { get; set; }

	[Parameter, EditorRequired]
	public EventCallback<Order> OrderedVehicle { get; set; }

	private int orderIdLength = 5;
	string start = "",startDate = "",end = "",endDate = "", diff = "";
	#endregion

	protected override void OnInitialized()
	{ 
		var startTime = DateTime.Parse(availableVehicle.StartTime);
		var reachTime = DateTime.Parse(availableVehicle.ReachTime);

		start = startTime.ToString("HH mm");
		end = reachTime.ToString("HH mm");

		startDate = startTime.ToString("MMMM dd yyyy");
		endDate = reachTime.ToString("MMMM dd yyyy");

		diff = (reachTime - startTime).ToString("HH mm");
	}
	private async void BookTicket()
	{
		var order = new Order()
			{

				AvailableVehicles = availableVehicle,
				CustomerData = currentContextData.Customers,
				Id = new Guid(),
				SearchVehicles = searchVechile,
				IsCancelled = false
			};
		await OrderedVehicle.InvokeAsync(order);
		SendMessage();
		navigation.NavigateTo("/orders");
	}
	async void SendMessage()
	{
		// for calling external Api like twilio for implemention of sending message
	}
}
